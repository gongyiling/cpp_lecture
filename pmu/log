
./a.out:     file format elf64-x86-64


Disassembly of section .init:

00000000004007c0 <_init>:
  4007c0:	48 83 ec 08          	sub    $0x8,%rsp
  4007c4:	48 8b 05 2d 18 20 00 	mov    0x20182d(%rip),%rax        # 601ff8 <_DYNAMIC+0x1f0>
  4007cb:	48 85 c0             	test   %rax,%rax
  4007ce:	74 05                	je     4007d5 <_init+0x15>
  4007d0:	e8 db 00 00 00       	callq  4008b0 <sched_setaffinity@plt+0x10>
  4007d5:	48 83 c4 08          	add    $0x8,%rsp
  4007d9:	c3                   	retq   

Disassembly of section .plt:

00000000004007e0 <operator delete(void*)@plt-0x10>:
  4007e0:	ff 35 22 18 20 00    	pushq  0x201822(%rip)        # 602008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4007e6:	ff 25 24 18 20 00    	jmpq   *0x201824(%rip)        # 602010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4007ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004007f0 <operator delete(void*)@plt>:
  4007f0:	ff 25 22 18 20 00    	jmpq   *0x201822(%rip)        # 602018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4007f6:	68 00 00 00 00       	pushq  $0x0
  4007fb:	e9 e0 ff ff ff       	jmpq   4007e0 <_init+0x20>

0000000000400800 <__printf_chk@plt>:
  400800:	ff 25 1a 18 20 00    	jmpq   *0x20181a(%rip)        # 602020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400806:	68 01 00 00 00       	pushq  $0x1
  40080b:	e9 d0 ff ff ff       	jmpq   4007e0 <_init+0x20>

0000000000400810 <std::ios_base::Init::Init()@plt>:
  400810:	ff 25 12 18 20 00    	jmpq   *0x201812(%rip)        # 602028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400816:	68 02 00 00 00       	pushq  $0x2
  40081b:	e9 c0 ff ff ff       	jmpq   4007e0 <_init+0x20>

0000000000400820 <__libc_start_main@plt>:
  400820:	ff 25 0a 18 20 00    	jmpq   *0x20180a(%rip)        # 602030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400826:	68 03 00 00 00       	pushq  $0x3
  40082b:	e9 b0 ff ff ff       	jmpq   4007e0 <_init+0x20>

0000000000400830 <__cxa_atexit@plt>:
  400830:	ff 25 02 18 20 00    	jmpq   *0x201802(%rip)        # 602038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400836:	68 04 00 00 00       	pushq  $0x4
  40083b:	e9 a0 ff ff ff       	jmpq   4007e0 <_init+0x20>

0000000000400840 <std::ios_base::Init::~Init()@plt>:
  400840:	ff 25 fa 17 20 00    	jmpq   *0x2017fa(%rip)        # 602040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400846:	68 05 00 00 00       	pushq  $0x5
  40084b:	e9 90 ff ff ff       	jmpq   4007e0 <_init+0x20>

0000000000400850 <__stack_chk_fail@plt>:
  400850:	ff 25 f2 17 20 00    	jmpq   *0x2017f2(%rip)        # 602048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400856:	68 06 00 00 00       	pushq  $0x6
  40085b:	e9 80 ff ff ff       	jmpq   4007e0 <_init+0x20>

0000000000400860 <rand@plt>:
  400860:	ff 25 ea 17 20 00    	jmpq   *0x2017ea(%rip)        # 602050 <_GLOBAL_OFFSET_TABLE_+0x50>
  400866:	68 07 00 00 00       	pushq  $0x7
  40086b:	e9 70 ff ff ff       	jmpq   4007e0 <_init+0x20>

0000000000400870 <__gxx_personality_v0@plt>:
  400870:	ff 25 e2 17 20 00    	jmpq   *0x2017e2(%rip)        # 602058 <_GLOBAL_OFFSET_TABLE_+0x58>
  400876:	68 08 00 00 00       	pushq  $0x8
  40087b:	e9 60 ff ff ff       	jmpq   4007e0 <_init+0x20>

0000000000400880 <operator new(unsigned long)@plt>:
  400880:	ff 25 da 17 20 00    	jmpq   *0x2017da(%rip)        # 602060 <_GLOBAL_OFFSET_TABLE_+0x60>
  400886:	68 09 00 00 00       	pushq  $0x9
  40088b:	e9 50 ff ff ff       	jmpq   4007e0 <_init+0x20>

0000000000400890 <_Unwind_Resume@plt>:
  400890:	ff 25 d2 17 20 00    	jmpq   *0x2017d2(%rip)        # 602068 <_GLOBAL_OFFSET_TABLE_+0x68>
  400896:	68 0a 00 00 00       	pushq  $0xa
  40089b:	e9 40 ff ff ff       	jmpq   4007e0 <_init+0x20>

00000000004008a0 <sched_setaffinity@plt>:
  4008a0:	ff 25 ca 17 20 00    	jmpq   *0x2017ca(%rip)        # 602070 <_GLOBAL_OFFSET_TABLE_+0x70>
  4008a6:	68 0b 00 00 00       	pushq  $0xb
  4008ab:	e9 30 ff ff ff       	jmpq   4007e0 <_init+0x20>

Disassembly of section .plt.got:

00000000004008b0 <.plt.got>:
  4008b0:	ff 25 42 17 20 00    	jmpq   *0x201742(%rip)        # 601ff8 <_DYNAMIC+0x1f0>
  4008b6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000004008c0 <main>:
  4008c0:	41 54                	push   %r12
  4008c2:	55                   	push   %rbp
  4008c3:	b9 10 00 00 00       	mov    $0x10,%ecx
  4008c8:	53                   	push   %rbx
  4008c9:	be 80 00 00 00       	mov    $0x80,%esi
  4008ce:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  4008d5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4008dc:	00 00 
  4008de:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
  4008e5:	00 
  4008e6:	31 c0                	xor    %eax,%eax
  4008e8:	48 89 e7             	mov    %rsp,%rdi
  4008eb:	48 89 e2             	mov    %rsp,%rdx
  4008ee:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  4008f1:	31 ff                	xor    %edi,%edi
  4008f3:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
  4008fa:	00 
  4008fb:	e8 a0 ff ff ff       	callq  4008a0 <sched_setaffinity@plt>
  400900:	bf 00 10 00 00       	mov    $0x1000,%edi
  400905:	e8 76 ff ff ff       	callq  400880 <operator new(unsigned long)@plt>
  40090a:	48 8d 98 00 10 00 00 	lea    0x1000(%rax),%rbx
  400911:	48 89 c5             	mov    %rax,%rbp
  400914:	0f 1f 40 00          	nopl   0x0(%rax)
  400918:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  40091e:	48 83 c0 04          	add    $0x4,%rax
  400922:	48 39 d8             	cmp    %rbx,%rax
  400925:	75 f1                	jne    400918 <main+0x58>
  400927:	49 89 ec             	mov    %rbp,%r12
  40092a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400930:	e8 2b ff ff ff       	callq  400860 <rand@plt>
  400935:	49 83 c4 04          	add    $0x4,%r12
  400939:	41 89 44 24 fc       	mov    %eax,-0x4(%r12)
  40093e:	49 39 dc             	cmp    %rbx,%r12
  400941:	75 ed                	jne    400930 <main+0x70>
  400943:	31 c9                	xor    %ecx,%ecx
  400945:	0f 33                	rdpmc  
  400947:	48 c1 e2 20          	shl    $0x20,%rdx
  40094b:	89 c0                	mov    %eax,%eax
  40094d:	b9 01 00 00 00       	mov    $0x1,%ecx
  400952:	48 09 c2             	or     %rax,%rdx
  400955:	49 89 d1             	mov    %rdx,%r9
  400958:	0f 33                	rdpmc  
  40095a:	48 c1 e2 20          	shl    $0x20,%rdx
  40095e:	89 c0                	mov    %eax,%eax
  400960:	b9 00 04 00 00       	mov    $0x400,%ecx
  400965:	48 09 c2             	or     %rax,%rdx
  400968:	49 89 d2             	mov    %rdx,%r10
  40096b:	31 d2                	xor    %edx,%edx
  40096d:	0f 1f 00             	nopl   (%rax)
  400970:	48 89 e8             	mov    %rbp,%rax
  400973:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400978:	8b 30                	mov    (%rax),%esi
  40097a:	48 83 c0 04          	add    $0x4,%rax
  40097e:	01 d6                	add    %edx,%esi
  400980:	48 39 d8             	cmp    %rbx,%rax
  400983:	89 f2                	mov    %esi,%edx
  400985:	75 f1                	jne    400978 <main+0xb8>
  400987:	83 e9 01             	sub    $0x1,%ecx
  40098a:	75 e4                	jne    400970 <main+0xb0>
  40098c:	0f 33                	rdpmc  
  40098e:	b9 01 00 00 00       	mov    $0x1,%ecx
  400993:	41 89 d0             	mov    %edx,%r8d
  400996:	89 c7                	mov    %eax,%edi
  400998:	0f 33                	rdpmc  
  40099a:	49 c1 e0 20          	shl    $0x20,%r8
  40099e:	89 f9                	mov    %edi,%ecx
  4009a0:	89 c0                	mov    %eax,%eax
  4009a2:	4c 09 c1             	or     %r8,%rcx
  4009a5:	49 89 d0             	mov    %rdx,%r8
  4009a8:	49 c1 e0 20          	shl    $0x20,%r8
  4009ac:	49 09 c0             	or     %rax,%r8
  4009af:	4d 29 d0             	sub    %r10,%r8
  4009b2:	4c 29 c9             	sub    %r9,%rcx
  4009b5:	78 5e                	js     400a15 <main+0x155>
  4009b7:	66 0f ef c0          	pxor   %xmm0,%xmm0
  4009bb:	f3 48 0f 2a c1       	cvtsi2ss %rcx,%xmm0
  4009c0:	4d 85 c0             	test   %r8,%r8
  4009c3:	78 6e                	js     400a33 <main+0x173>
  4009c5:	66 0f ef c9          	pxor   %xmm1,%xmm1
  4009c9:	f3 49 0f 2a c8       	cvtsi2ss %r8,%xmm1
  4009ce:	89 f2                	mov    %esi,%edx
  4009d0:	bf 01 00 00 00       	mov    $0x1,%edi
  4009d5:	be 88 0c 40 00       	mov    $0x400c88,%esi
  4009da:	f3 0f 5e c1          	divss  %xmm1,%xmm0
  4009de:	b8 01 00 00 00       	mov    $0x1,%eax
  4009e3:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
  4009e7:	e8 14 fe ff ff       	callq  400800 <__printf_chk@plt>
  4009ec:	48 89 ef             	mov    %rbp,%rdi
  4009ef:	e8 fc fd ff ff       	callq  4007f0 <operator delete(void*)@plt>
  4009f4:	31 c0                	xor    %eax,%eax
  4009f6:	48 8b bc 24 88 00 00 	mov    0x88(%rsp),%rdi
  4009fd:	00 
  4009fe:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
  400a05:	00 00 
  400a07:	75 4b                	jne    400a54 <main+0x194>
  400a09:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
  400a10:	5b                   	pop    %rbx
  400a11:	5d                   	pop    %rbp
  400a12:	41 5c                	pop    %r12
  400a14:	c3                   	retq   
  400a15:	48 89 c8             	mov    %rcx,%rax
  400a18:	48 89 ca             	mov    %rcx,%rdx
  400a1b:	66 0f ef c0          	pxor   %xmm0,%xmm0
  400a1f:	48 d1 e8             	shr    %rax
  400a22:	83 e2 01             	and    $0x1,%edx
  400a25:	48 09 d0             	or     %rdx,%rax
  400a28:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
  400a2d:	f3 0f 58 c0          	addss  %xmm0,%xmm0
  400a31:	eb 8d                	jmp    4009c0 <main+0x100>
  400a33:	4c 89 c0             	mov    %r8,%rax
  400a36:	4c 89 c2             	mov    %r8,%rdx
  400a39:	66 0f ef c9          	pxor   %xmm1,%xmm1
  400a3d:	48 d1 e8             	shr    %rax
  400a40:	83 e2 01             	and    $0x1,%edx
  400a43:	48 09 d0             	or     %rdx,%rax
  400a46:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
  400a4b:	f3 0f 58 c9          	addss  %xmm1,%xmm1
  400a4f:	e9 7a ff ff ff       	jmpq   4009ce <main+0x10e>
  400a54:	e8 f7 fd ff ff       	callq  400850 <__stack_chk_fail@plt>
  400a59:	48 89 c3             	mov    %rax,%rbx
  400a5c:	48 89 ef             	mov    %rbp,%rdi
  400a5f:	e8 8c fd ff ff       	callq  4007f0 <operator delete(void*)@plt>
  400a64:	48 89 df             	mov    %rbx,%rdi
  400a67:	e8 24 fe ff ff       	callq  400890 <_Unwind_Resume@plt>
  400a6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400a70 <_GLOBAL__sub_I__Z5rdpmcii>:
  400a70:	48 83 ec 08          	sub    $0x8,%rsp
  400a74:	bf 89 20 60 00       	mov    $0x602089,%edi
  400a79:	e8 92 fd ff ff       	callq  400810 <std::ios_base::Init::Init()@plt>
  400a7e:	ba 80 20 60 00       	mov    $0x602080,%edx
  400a83:	be 89 20 60 00       	mov    $0x602089,%esi
  400a88:	bf 40 08 40 00       	mov    $0x400840,%edi
  400a8d:	48 83 c4 08          	add    $0x8,%rsp
  400a91:	e9 9a fd ff ff       	jmpq   400830 <__cxa_atexit@plt>
  400a96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400a9d:	00 00 00 

0000000000400aa0 <_start>:
  400aa0:	31 ed                	xor    %ebp,%ebp
  400aa2:	49 89 d1             	mov    %rdx,%r9
  400aa5:	5e                   	pop    %rsi
  400aa6:	48 89 e2             	mov    %rsp,%rdx
  400aa9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400aad:	50                   	push   %rax
  400aae:	54                   	push   %rsp
  400aaf:	49 c7 c0 70 0c 40 00 	mov    $0x400c70,%r8
  400ab6:	48 c7 c1 00 0c 40 00 	mov    $0x400c00,%rcx
  400abd:	48 c7 c7 c0 08 40 00 	mov    $0x4008c0,%rdi
  400ac4:	e8 57 fd ff ff       	callq  400820 <__libc_start_main@plt>
  400ac9:	f4                   	hlt    
  400aca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400ad0 <deregister_tm_clones>:
  400ad0:	b8 8f 20 60 00       	mov    $0x60208f,%eax
  400ad5:	55                   	push   %rbp
  400ad6:	48 2d 88 20 60 00    	sub    $0x602088,%rax
  400adc:	48 83 f8 0e          	cmp    $0xe,%rax
  400ae0:	48 89 e5             	mov    %rsp,%rbp
  400ae3:	76 1b                	jbe    400b00 <deregister_tm_clones+0x30>
  400ae5:	b8 00 00 00 00       	mov    $0x0,%eax
  400aea:	48 85 c0             	test   %rax,%rax
  400aed:	74 11                	je     400b00 <deregister_tm_clones+0x30>
  400aef:	5d                   	pop    %rbp
  400af0:	bf 88 20 60 00       	mov    $0x602088,%edi
  400af5:	ff e0                	jmpq   *%rax
  400af7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400afe:	00 00 
  400b00:	5d                   	pop    %rbp
  400b01:	c3                   	retq   
  400b02:	0f 1f 40 00          	nopl   0x0(%rax)
  400b06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400b0d:	00 00 00 

0000000000400b10 <register_tm_clones>:
  400b10:	be 88 20 60 00       	mov    $0x602088,%esi
  400b15:	55                   	push   %rbp
  400b16:	48 81 ee 88 20 60 00 	sub    $0x602088,%rsi
  400b1d:	48 c1 fe 03          	sar    $0x3,%rsi
  400b21:	48 89 e5             	mov    %rsp,%rbp
  400b24:	48 89 f0             	mov    %rsi,%rax
  400b27:	48 c1 e8 3f          	shr    $0x3f,%rax
  400b2b:	48 01 c6             	add    %rax,%rsi
  400b2e:	48 d1 fe             	sar    %rsi
  400b31:	74 15                	je     400b48 <register_tm_clones+0x38>
  400b33:	b8 00 00 00 00       	mov    $0x0,%eax
  400b38:	48 85 c0             	test   %rax,%rax
  400b3b:	74 0b                	je     400b48 <register_tm_clones+0x38>
  400b3d:	5d                   	pop    %rbp
  400b3e:	bf 88 20 60 00       	mov    $0x602088,%edi
  400b43:	ff e0                	jmpq   *%rax
  400b45:	0f 1f 00             	nopl   (%rax)
  400b48:	5d                   	pop    %rbp
  400b49:	c3                   	retq   
  400b4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400b50 <__do_global_dtors_aux>:
  400b50:	80 3d 31 15 20 00 00 	cmpb   $0x0,0x201531(%rip)        # 602088 <__TMC_END__>
  400b57:	75 11                	jne    400b6a <__do_global_dtors_aux+0x1a>
  400b59:	55                   	push   %rbp
  400b5a:	48 89 e5             	mov    %rsp,%rbp
  400b5d:	e8 6e ff ff ff       	callq  400ad0 <deregister_tm_clones>
  400b62:	5d                   	pop    %rbp
  400b63:	c6 05 1e 15 20 00 01 	movb   $0x1,0x20151e(%rip)        # 602088 <__TMC_END__>
  400b6a:	f3 c3                	repz retq 
  400b6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400b70 <frame_dummy>:
  400b70:	bf 00 1e 60 00       	mov    $0x601e00,%edi
  400b75:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400b79:	75 05                	jne    400b80 <frame_dummy+0x10>
  400b7b:	eb 93                	jmp    400b10 <register_tm_clones>
  400b7d:	0f 1f 00             	nopl   (%rax)
  400b80:	b8 00 00 00 00       	mov    $0x0,%eax
  400b85:	48 85 c0             	test   %rax,%rax
  400b88:	74 f1                	je     400b7b <frame_dummy+0xb>
  400b8a:	55                   	push   %rbp
  400b8b:	48 89 e5             	mov    %rsp,%rbp
  400b8e:	ff d0                	callq  *%rax
  400b90:	5d                   	pop    %rbp
  400b91:	e9 7a ff ff ff       	jmpq   400b10 <register_tm_clones>
  400b96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400b9d:	00 00 00 

0000000000400ba0 <rdpmc(int, int)>:
  400ba0:	c1 e6 1e             	shl    $0x1e,%esi
  400ba3:	8d 0c 3e             	lea    (%rsi,%rdi,1),%ecx
  400ba6:	0f 33                	rdpmc  
  400ba8:	48 89 d1             	mov    %rdx,%rcx
  400bab:	89 c0                	mov    %eax,%eax
  400bad:	48 c1 e1 20          	shl    $0x20,%rcx
  400bb1:	48 09 c8             	or     %rcx,%rax
  400bb4:	c3                   	retq   
  400bb5:	90                   	nop
  400bb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400bbd:	00 00 00 

0000000000400bc0 <sum(std::vector<int, std::allocator<int> > const&, int)>:
  400bc0:	85 f6                	test   %esi,%esi
  400bc2:	7e 30                	jle    400bf4 <sum(std::vector<int, std::allocator<int> > const&, int)+0x34>
  400bc4:	4c 8b 07             	mov    (%rdi),%r8
  400bc7:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
  400bcb:	31 c0                	xor    %eax,%eax
  400bcd:	31 ff                	xor    %edi,%edi
  400bcf:	90                   	nop
  400bd0:	4c 39 c1             	cmp    %r8,%rcx
  400bd3:	74 16                	je     400beb <sum(std::vector<int, std::allocator<int> > const&, int)+0x2b>
  400bd5:	4c 89 c2             	mov    %r8,%rdx
  400bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400bdf:	00 
  400be0:	03 02                	add    (%rdx),%eax
  400be2:	48 83 c2 04          	add    $0x4,%rdx
  400be6:	48 39 d1             	cmp    %rdx,%rcx
  400be9:	75 f5                	jne    400be0 <sum(std::vector<int, std::allocator<int> > const&, int)+0x20>
  400beb:	83 c7 01             	add    $0x1,%edi
  400bee:	39 fe                	cmp    %edi,%esi
  400bf0:	75 de                	jne    400bd0 <sum(std::vector<int, std::allocator<int> > const&, int)+0x10>
  400bf2:	f3 c3                	repz retq 
  400bf4:	31 c0                	xor    %eax,%eax
  400bf6:	c3                   	retq   
  400bf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400bfe:	00 00 

0000000000400c00 <__libc_csu_init>:
  400c00:	41 57                	push   %r15
  400c02:	41 56                	push   %r14
  400c04:	41 89 ff             	mov    %edi,%r15d
  400c07:	41 55                	push   %r13
  400c09:	41 54                	push   %r12
  400c0b:	4c 8d 25 d6 11 20 00 	lea    0x2011d6(%rip),%r12        # 601de8 <__frame_dummy_init_array_entry>
  400c12:	55                   	push   %rbp
  400c13:	48 8d 2d de 11 20 00 	lea    0x2011de(%rip),%rbp        # 601df8 <__init_array_end>
  400c1a:	53                   	push   %rbx
  400c1b:	49 89 f6             	mov    %rsi,%r14
  400c1e:	49 89 d5             	mov    %rdx,%r13
  400c21:	4c 29 e5             	sub    %r12,%rbp
  400c24:	48 83 ec 08          	sub    $0x8,%rsp
  400c28:	48 c1 fd 03          	sar    $0x3,%rbp
  400c2c:	e8 8f fb ff ff       	callq  4007c0 <_init>
  400c31:	48 85 ed             	test   %rbp,%rbp
  400c34:	74 20                	je     400c56 <__libc_csu_init+0x56>
  400c36:	31 db                	xor    %ebx,%ebx
  400c38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400c3f:	00 
  400c40:	4c 89 ea             	mov    %r13,%rdx
  400c43:	4c 89 f6             	mov    %r14,%rsi
  400c46:	44 89 ff             	mov    %r15d,%edi
  400c49:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  400c4d:	48 83 c3 01          	add    $0x1,%rbx
  400c51:	48 39 eb             	cmp    %rbp,%rbx
  400c54:	75 ea                	jne    400c40 <__libc_csu_init+0x40>
  400c56:	48 83 c4 08          	add    $0x8,%rsp
  400c5a:	5b                   	pop    %rbx
  400c5b:	5d                   	pop    %rbp
  400c5c:	41 5c                	pop    %r12
  400c5e:	41 5d                	pop    %r13
  400c60:	41 5e                	pop    %r14
  400c62:	41 5f                	pop    %r15
  400c64:	c3                   	retq   
  400c65:	90                   	nop
  400c66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400c6d:	00 00 00 

0000000000400c70 <__libc_csu_fini>:
  400c70:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400c74 <_fini>:
  400c74:	48 83 ec 08          	sub    $0x8,%rsp
  400c78:	48 83 c4 08          	add    $0x8,%rsp
  400c7c:	c3                   	retq   
